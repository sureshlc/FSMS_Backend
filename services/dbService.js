const { Model } = require("sequelize");
const logger = require("../common/logger");

/**
 * Creates multiple records in the database table.
 *
 * @param {Model} Table - The database table model.
 * @param {Array} data - The data to be created in the table.
 * @return {Promise} Returns a promise that resolves with the created records.
 */
exports.dbBulkCreate = async (Table, data, chunkSize = 100) => {
  try {
    // Define columns that should be updated if duplicate exists
    // Exclude auto-increment primary key field and fields that uniquely identify the record
    const updateColumns = Object.keys(Table.rawAttributes).filter((key) => {
      const field = Table.rawAttributes[key];
      return !(field.primaryKey || field._autoGenerated || field.unique);
    });

    // Chunk the data into arrays of the specified size
    const chunks = [];
    for (let i = 0; i < data.length; i += chunkSize) {
      chunks.push(data.slice(i, i + chunkSize));
    }

    const results = [];
    // Perform bulk create for each chunk, with update on duplicate keys
    for (const chunk of chunks) {
      const result = await Table.bulkCreate(chunk, {
        updateOnDuplicate: updateColumns, // specify fields to update
      });
      results.push(result);
    }

    return results;
  } catch (error) {
    logger.error("Error in bulk create/update:", error);
    throw error;
  }
};
